const soundPath = "/notification.mp3"; class Notify { constructor(e = {}) { this.corner = e.corner || "top_right", this.maxElem = e.maxElem || 5, this.notifyWrapper = document.createElement("div"), this.notifyWrapper.id = `notifyWrapper_${Math.floor(100 * Math.random()) + 1}`, this.notifyWrapper.className = this.corner, document.body.append(this.notifyWrapper) } spawn(e, t, n, a, s, r, o) { const i = document.createElement("div"); i.className = `alert alert-${s}`; const c = document.createElement("div"); c.className = "header"; const d = document.createElement("h3"); if (d.className = "title", d.innerHTML = e, d.setAttribute("title", e), c.append(d), i.append(c), t) { const n = document.createElement("div"); if (n.className = "content", t.image) { const a = document.createElement("img"); a.className = "image", a.setAttribute("src", t.image), a.setAttribute("title", e), n.append(a) } if (t.text) { const e = document.createElement("p"); e.className = "text", t.text.length >= 150 && (t.text = `${t.text.substring(0, 150)}...`), e.innerHTML = t.text, n.append(e) } i.append(n) } if (n) { const e = document.createElement("div"); e.className = "btnBlock"; const t = document.createElement(n.url ? "a" : "button"); t.className = "ctaBtn", t.innerHTML = n.title, n.url && (t.href = n.url, n.target && (t.target = n.target, "_blank" === n.target && (t.rel = "noopener noreferrer"))), n.onClick && t.addEventListener("click", (e => { n.url && e.preventDefault(), n.onClick(e, i) })), e.append(t), i.append(e) } if (r) { let e; e = "string" == typeof r ? new Audio(r) : new Audio(soundPath), e.play().catch((e => console.error("Ошибка воспроизведения звука:", e))) } if (a.closed) { const e = document.createElement("button"); e.className = "closeBtn", e.innerHTML = '<svg width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n<path d="M14.3203 12.25L17.8359 8.73438C18.293 8.3125 18.293 7.60938 17.8359 7.1875L17.0625 6.41406C16.6406 5.95703 15.9375 5.95703 15.5156 6.41406L12 9.92969L8.44922 6.41406C8.02734 5.95703 7.32422 5.95703 6.90234 6.41406L6.12891 7.1875C5.67188 7.60938 5.67188 8.3125 6.12891 8.73438L9.64453 12.25L6.12891 15.8008C5.67188 16.2227 5.67188 16.9258 6.12891 17.3477L6.90234 18.1211C7.32422 18.5781 8.02734 18.5781 8.44922 18.1211L12 14.6055L15.5156 18.1211C15.9375 18.5781 16.6406 18.5781 17.0625 18.1211L17.8359 17.3477C18.293 16.9258 18.293 16.2227 17.8359 15.8008L14.3203 12.25Z"/>\n</svg>', c.append(e), e.addEventListener("click", (() => { this.hideAndRemove(i) })) } return void 0 !== a.delay ? setTimeout((() => { this.hideAndRemove(i) }), a.delay) : a.closed || setTimeout((() => { this.hideAndRemove(i) }), 5e3), "top_right" == this.corner || "top_left" == this.corner ? o.prepend(i) : o.append(i), i } hideAndRemove(e) { e && !e.classList.contains("hide") && (e.classList.add("hide"), setTimeout((() => { e.parentNode && e.remove() }), 300)) } render(e = {}) { const t = { header: e.header || "Hi, I'm the Notify Native — JS library.", content: e.content || !1, ctaBtn: e.ctaBtn || !1, style: e.style || "dark", sound: e.sound || !1, type: { closed: e.type?.closed ?? !1, delay: e.type?.delay } }; return this.notifyWrapper.getElementsByClassName("alert").length < this.maxElem ? this.spawn(t.header, t.content, t.ctaBtn, t.type, t.style, t.sound, this.notifyWrapper) : null } }